# @see https://github.com/kurozumi
name: CI/CD for EC-CUBE4 Plugin with Composer:v1
on: [workflow_dispatch, pull_request]
env:
  PLUGIN_NAME: DataMigration4
jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        eccube-versions: ['4.0']
        php: [ 7.4 ]
        database: [mysql, pgsql]
        include:
          - database: mysql
            database_url: mysql://root:root@127.0.0.1:3306/eccube_db
            database_server_version: 5
          - database: pgsql
            database_url: postgres://postgres:password@127.0.0.1:5432/eccube_db
            database_server_version: 11

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: eccube_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eccube_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP
        uses: nanasess/setup-php@master
        with:
          php-version: ${{ matrix.php }}

      - name: Clone EC-CUBE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tar cvzf $HOME/${PLUGIN_NAME}.tar.gz ./*
          git clone  https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/EC-CUBE/ec-cube.git -b ${{ matrix.eccube-versions }} --depth=1

      - name: Install Composer dependencies
        run : |
          cd ec-cube
          sudo composer selfupdate --1
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          composer require --dev kiy0taka/eccube4-test-fixer
          composer require pear/pear-core-minimal:^1.10.0alpha2
          composer require pear/archive_tar:^1.4.3
          composer require wapmorgan/unified-archive:^0.0.3
          composer require nobuhiko/bulk-insert-query

      - name: Setup EC-CUBE
        run: |
          cd ec-cube
          bin/console doctrine:schema:create
          bin/console eccube:fixtures:load
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Install Plugin
        run: |
          cd ec-cube
          bin/console eccube:plugin:install --path=$HOME/${PLUGIN_NAME}.tar.gz
          bin/console cache:clear --no-warmup
          bin/console eccube:plugin:enable --code=${PLUGIN_NAME}
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

      - name: Run Tests for EC-CUBE4.0
        run: |
          cd ec-cube
          bin/phpunit -c app/Plugin/{$PLUGIN_NAME}/phpunit.xml.dist app/Plugin/{$PLUGIN_NAME}/Tests/
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}

