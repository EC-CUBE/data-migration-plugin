# @see https://github.com/kurozumi
name: CI/CD for EC-CUBE4 Plugin
on: [workflow_dispatch, pull_request]
env:
  PLUGIN_NAME: DataMigration4
jobs:
  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        eccube-versions: ['4.2']
        php-versions: [7.4,8.0,8.1]
        database: [mysql, pgsql]
        include:
          - database: mysql
            database_url: mysql://root:root@127.0.0.1:3306/eccube_db
            database_server_version: 5
            database_charset: utf8mb4
          - database: pgsql
            database_url: postgres://postgres:password@127.0.0.1:5432/eccube_db
            database_server_version: 11
            database_charset: utf8

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: eccube_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eccube_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout EC-CUBE
        uses: actions/checkout@v2
        with:
          repository: EC-CUBE/ec-cube
          ref: ${{ matrix.eccube-versions }}

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, mysql, intl, zip, pgsql
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run : |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          composer require pear/pear-core-minimal:^1.10.10 pear/archive_tar:^1.4.13 wapmorgan/unified-archive:^1.1.1 nobuhiko/bulk-insert-query

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: app/Plugin/DataMigration4

      - name: Setup EC-CUBE
        run: |
          #bin/console doctrine:database:create
          bin/console doctrine:schema:create
          bin/console eccube:fixtures:load
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
          DATABASE_CHARSET: ${{ matrix.database_charset }}
          APP_ENV: test
          APP_DEBUG: 0

      - name: Setup Plugin
        run: |
          bin/console eccube:plugin:install --code $PLUGIN_NAME
          bin/console cache:clear --no-warmup
          bin/console eccube:plugin:enable --code $PLUGIN_NAME
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
          DATABASE_CHARSET: ${{ matrix.database_charset }}
          APP_ENV: test
          APP_DEBUG: 0

      - name: Run Tests for EC-CUBE4.2
        run: |
          bin/phpunit app/Plugin/$PLUGIN_NAME/Tests
        env:
          DATABASE_URL: ${{ matrix.database_url }}
          DATABASE_SERVER_VERSION: ${{ matrix.database_server_version }}
          DATABASE_CHARSET: ${{ matrix.database_charset }}
          APP_ENV: test
          APP_DEBUG: 0
